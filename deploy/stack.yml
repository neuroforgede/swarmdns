services:
  dns:
    image: ghcr.io/neuroforgede/swarmdns:0.2.10
    command: ["python", "-u", "dns.py"]
    env_file:
      - .env
    environment:
      DEBUG: "true"
      S3_REFRESH_INTERVAL: "10"
      DOCKER_NETWORK_INFO_CACHE_REFRESH_INTERVAL: "10"
      DNS_WORKER_THREADS: "10"
      STRIP_DOMAIN_ENDINGS: ".localdomain.,.docker.,.docker.localdomain."
    dns:
      - "8.8.8.8"
      - "8.8.4.4"
    networks:
      - host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      # every node needs a dns service
      mode: global

  exporter:
    image: ghcr.io/neuroforgede/swarmdns:0.2.10
    command: ["python", "-u", "exporter.py"]
    env_file:
      - .env
    environment:
      SWARM_NODE_ID: "{{ .Node.ID }}"
      EXPORTER_INTERVAL: "10"
    dns:
      - "8.8.8.8"
      - "8.8.4.4"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      # every node needs an exporter service, we need to export
      # all container data from all nodes
      mode: global

  nodes:
    image: ghcr.io/neuroforgede/swarmdns:0.2.10
    command: ["python", "-u", "nodes.py"]
    env_file:
      - .env
    environment:
      NODES_INTERVAL: "60"
    dns:
      - "8.8.8.8"
      - "8.8.4.4"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      # run only on a manager node
      placement:
        constraints:
          - node.role == manager
      # we only need this once
      replicas: 1

  merger:
    image: ghcr.io/neuroforgede/swarmdns:0.2.10
    command: ["python", "-u", "merger.py"]
    env_file:
      - .env
    dns:
      - "8.8.8.8"
      - "8.8.4.4"
    environment:
      MERGE_INTERVAL: "10"

networks:
  host:
    name: "host"
    external: true